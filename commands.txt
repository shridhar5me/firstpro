PS C:\Users\Admin\Desktop\new> git init
On branch master
No commits yet
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        abc.txt

PS C:\Users\Admin\Desktop\new> git add abc.txt
PS C:\Users\Admin\Desktop\new> git commit -m "abc"
[master (root-commit) 3067099] abc
 1 file changed, 1 insertion(+)
 create mode 100644 abc.txt


PS C:\Users\Admin\Desktop\new> git status
On branch master
nothing to commit, working tree clean


PS C:\Users\Admin\Desktop\new> git log --oneline
3067099 (HEAD -> master) abc

PS C:\Users\Admin\Desktop\new> git branch
* master



PS C:\Users\Admin\Desktop\new> git branch branch1
PS C:\Users\Admin\Desktop\new> git branch
  branch1
* master


PS C:\Users\Admin\Desktop\new> git switch branch1
M       commands.txt
Switched to branch 'branch1'
PS C:\Users\Admin\Desktop\new> git branch        
* branch1
  master


PS C:\Users\Admin\Desktop\new> git switch -c branch2  
Switched to a new branch 'branch2'
PS C:\Users\Admin\Desktop\new> git branch
  branch1
* branch2
  master


PS C:\Users\Admin\Desktop\new> git checkout master     
M       commands.txt
Switched to branch 'master'
PS C:\Users\Admin\Desktop\new> git branch
  branch1
  branch2
* master


PS C:\Users\Admin\Desktop\new> git branch -m branch2 newbranch
PS C:\Users\Admin\Desktop\new> git branch
  branch1
* master
  newbranch


PS C:\Users\Admin\Desktop\new> git branch -d newbranch    
Deleted branch newbranch (was e827a33).


PS C:\Users\Admin\Desktop\new> git add branch2file.txt        
PS C:\Users\Admin\Desktop\new> git commit -m "first"
[branch2 eaba43d] first
 1 file changed, 1 insertion(+)
 create mode 100644 branch2file.txt
 
 
 *Now this branch2file will be not visible when we switch to other branch...so we need to merge them*


 PS C:\Users\Admin\Desktop\new> git merge branch2
Updating e827a33..eaba43d
Fast-forward
 branch2file.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 branch2file.txt